{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/models/employee.model.ts","webpack:///src/app/core/services/api.service.ts","webpack:///src/app/core/services/employee.service.ts","webpack:///src/app/employee/employee-add/employee-add.component.ts","webpack:///src/app/employee/employee-add/employee-add.component.html","webpack:///src/app/employee/employee-list/employee-list.component.ts","webpack:///src/app/employee/employee-list/employee-list.component.html","webpack:///src/app/employee/employee.module.ts","webpack:///src/app/employee/employee.routing.module.ts","webpack:///src/app/layout/component/content/content.component.ts","webpack:///src/app/layout/component/content/content.component.html","webpack:///src/app/layout/component/side-bar/side-bar.component.ts","webpack:///src/app/layout/component/side-bar/side-bar.component.html","webpack:///src/app/layout/component/side-bar/side-bar.service.ts","webpack:///src/app/shared/component/spinner/spinner.component.ts","webpack:///src/app/shared/component/spinner/spinner.component.html","webpack:///src/app/shared/component/toaster-message/toaster-message.component.ts","webpack:///src/app/shared/component/toaster-message/toaster-message.component.html","webpack:///src/app/shared/pipe/search.pipe.ts","webpack:///src/app/shared/service/config/config.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","loadChildren","m","EmployeeModule","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CoreModule","Employee","employeeData","firstName","first_name","lastName","last_name","dob","gender","department","ApiService","httpClient","options","headers","set","url","params","get","pipe","formatErrors","body","post","JSON","stringify","error","providedIn","BASE_URL","serverUrl","EmployeeService","apiService","employee","EmployeeAddComponent","formBuilder","employeeService","toastrService","createForm","bsConfig","Object","assign","containerClass","employeeAddForm","group","required","minLength","maxLength","value","createNewUser","subscribe","data","success","message","registerUser","animations","host","EmployeeListComponent","showSpinner","getAllUsers","length","hideSpinner","noDatainDb","employees","sortByFirstName","isException","callBack","setTimeout","sort","first","second","toString","localeCompare","timeOut","preventDuplicates","EmployeeRoutingModule","forChild","ContentComponent","SideBarComponent","sideBarService","menus","getMenuList","height","SideBarService","icon","active","SpinnerComponent","ToasterMessageComponent","SearchPipe","items","term","result","filter","toCompare","toLowerCase","item","property","undefined","includes","name","routerTransition","slideToLeft","transform","position","width","SharedModule","environment","production","bootstrapModule","catch","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContentComponent} from './layout/component/content/content.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContentComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./employee/employee.module').then(m => m.EmployeeModule)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'employee-portal';\n}\n","\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { EmployeeModule } from './employee/employee.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ContentComponent } from './layout/component/content/content.component';\nimport { SideBarComponent } from './layout/component/side-bar/side-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentComponent,\n    SideBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule,\n    EmployeeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ]\n})\nexport class CoreModule { }\n","export class Employee {\n    firstName: string;\n    lastName: string;\n    dob: Date;\n    gender: string;\n    department: string;\n    constructor(employeeData: any) {\n        this.firstName = employeeData.first_name;\n        this.lastName = employeeData.last_name;\n        this.dob = employeeData.dob;\n        this.gender = employeeData.gender;\n        this.department = employeeData.department;\n    }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n\n  constructor(private httpClient: HttpClient) { }\n\n  public get(url: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.httpClient.get(url, { params }).pipe(catchError(this.formatErrors));\n  }\n\n  public post(url: string, body: object = {}): Observable<any> {\n    return this.httpClient\n      .post(url, JSON.stringify(body), this.options)\n      .pipe(catchError(this.formatErrors));\n  }\n\n  public formatErrors(error: any): Observable<any> {\n    return throwError(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { Employee } from 'src/app/core/models/employee.model';\nimport { environment as env } from '../../../environments/environment';\n\nconst BASE_URL = env.serverUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private apiService: ApiService) { }\n\n  getAllUsers(): Observable<Employee[]> {\n    return this.apiService.get(BASE_URL);\n  }\n  createNewUser(employee: Employee): Observable<any> {\n    return this.apiService.post(BASE_URL, employee);\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/ngx-bootstrap-datepicker';\n\nimport { routerTransition } from '../../shared/service/config/config.service';\nimport { Employee } from '../../core/models/employee.model';\nimport { EmployeeService } from 'src/app/core/services/employee.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css'],\n  animations: [routerTransition()],\n  host: { '[@routerTransition]': '' }\n})\nexport class EmployeeAddComponent implements OnInit {\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  employeeAddForm: FormGroup;\n  constructor(private formBuilder: FormBuilder, private employeeService: EmployeeService, private toastrService: ToastrService) {\n    this.createForm();\n  }\n  ngOnInit() {\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-default' });\n  }\n\n  createForm() {\n\n    this.employeeAddForm = this.formBuilder.group({\n      first_name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      last_name: ['', [Validators.required]],\n      dob: ['', Validators.required],\n      gender: ['', Validators.required],\n      department: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n    });\n  }\n  registerUser() {\n    if (this.employeeAddForm.value) {\n      const employeeData: Employee = new Employee(this.employeeAddForm.value);\n      this.employeeService.createNewUser(employeeData).subscribe(data => {\n        this.createForm();\n        this.toastrService.success('Employee registered successfully', 'Success!');\n\n      }, (error) => {\n        this.toastrService.error('error.status ' + error.message, 'Oops! Error..');\n      });\n    }\n\n  }\n\n\n}\n","\n<div class=\"reg-heading\">\n  <h5><i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>    Employee Registration</h5>\n  <hr>\n</div>\n     \n<form [formGroup]=\"employeeAddForm\" (ngSubmit)=\"registerUser()\" style=\"width: 60%\">\n  <div class=\"form-group\">\n    <label for=\"FirstName\">First Name</label>\n    <input type=\"text\" class=\"form-control input-sm\" id=\"firstName\" formControlName=\"first_name\">\n    <div\n      *ngIf=\"employeeAddForm.controls['first_name'].invalid && (employeeAddForm.controls['first_name'].dirty || employeeAddForm.controls['first_name'].touched)\"\n      style=\"color: red\">\n      <div *ngIf=\"employeeAddForm.controls['first_name'].errors.required\"> First Name is required.</div>\n      <div\n        *ngIf=\"employeeAddForm.controls['first_name'].errors.minlength || employeeAddForm.controls['first_name'].errors.minlength\">\n        Please enter 3 to 50 characters</div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"lastName\">Last Name:</label>\n    <input type=\"text\" class=\"form-control input-sm\" id=\"lastName\" formControlName=\"last_name\">\n    <div\n      *ngIf=\"employeeAddForm.controls['last_name'].invalid && (employeeAddForm.controls['last_name'].dirty || employeeAddForm.controls['last_name'].touched)\"\n      style=\"color: red\">\n      <div *ngIf=\"employeeAddForm.controls['last_name'].errors.required\">Last Name is required.</div>\n\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"gender\">Gender:</label>\n    <select class=\"form-control input-sm\" id=\"gender\" formControlName=\"gender\">\n      <option>Female</option>\n      <option>Male</option>\n      <option>Other</option>\n    </select>\n    <div\n      *ngIf=\"employeeAddForm.controls['gender'].invalid && (employeeAddForm.controls['gender'].dirty || employeeAddForm.controls['gender'].touched)\"\n      style=\"color: red\">\n      <div *ngIf=\"employeeAddForm.controls['gender'].errors.required\"> Gender is required.</div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"dob\">Date of Birth:</label>\n    <input type=\"text\" class=\"form-control\" id=\"dob\" bsDatepicker #dp=\"bsDatepicker\" [bsConfig]=\"bsConfig\"\n      formControlName=\"dob\">\n    <div\n      *ngIf=\"employeeAddForm.controls['dob'].invalid && (employeeAddForm.controls['dob'].dirty || employeeAddForm.controls['dob'].touched)\"\n      style=\"color: red\">\n      <div *ngIf=\"employeeAddForm.controls['dob'].errors.required\"> Date of Birth is required.</div>\n    </div>\n  </div>\n  \n  <div class=\"form-group\">\n    <label for=\"department\">Department:</label>\n    <input type=\"text\" class=\"form-control input-sm\" id=\"department\" formControlName=\"department\">\n    <div\n      *ngIf=\"employeeAddForm.controls['department'].invalid && (employeeAddForm.controls['department'].dirty || employeeAddForm.controls['department'].touched)\"\n      style=\"color: red\">\n      <div *ngIf=\"employeeAddForm.controls['department'].errors.required\"> Department is required.</div>\n      <div\n        *ngIf=\"employeeAddForm.controls['department'].errors.minlength || employeeAddForm.controls['department'].errors.minlength\">\n        Please enter 2 to 50 characters</div>\n    </div>\n  </div>\n\n  <button type=\"submit\"  id=\"register\" [disabled]=\"!employeeAddForm.valid\"  [ngClass]=\"[!employeeAddForm.valid ?'disabled-button btn btn-primary':'btn btn-primary' ]\" >Register</button>\n</form>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { routerTransition } from '../../shared/service/config/config.service';\nimport { EmployeeService } from 'src/app/core/services/employee.service';\nimport { Employee } from 'src/app/core/models/employee.model';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css'],\n  animations: [routerTransition()],\n  host: { '[@routerTransition]': '' }\n})\nexport class EmployeeListComponent implements AfterViewInit {\n\n  showSpinner: boolean;\n  noDatainDb: boolean;\n  isException: boolean;\n  searchText: any;\n  employees: Employee[];\n\n  constructor(private employeeService: EmployeeService) {\n    this.showSpinner = true;\n  }\n\n  ngAfterViewInit() {\n    this.showSpinner = true;\n    this.employeeService.getAllUsers().subscribe(data => {\n\n      if (data.length === 0) {\n        this.hideSpinner(() => {\n          this.noDatainDb = true;\n        });\n      } else {\n        this.hideSpinner(() => {\n          this.employees = this.sortByFirstName(data);\n        });\n\n      }\n    }, error => {\n      this.hideSpinner(() => {\n        this.isException = true;\n      });\n\n    });\n  }\n  hideSpinner(callBack?) {\n    setTimeout(() => {\n      this.showSpinner = false;\n      if (callBack) {\n        callBack();\n      }\n    }, 1000);\n  }\n\n  sortByFirstName(data: Employee[]): Employee[] {\n    return data.sort((first, second) => {\n      return first.firstName.toString().localeCompare(second.firstName.toString());\n    });\n  }\n\n}\n","<br>\n<br>\n<div style=\"margin-bottom: 1%\">\n  <div class=\"float-left\">\n    <h5 style=\"\n        margin-top: 3%;\n    \"><i class=\"fa fa-users\" aria-hidden=\"true\"></i> Employee List</h5>\n  </div>\n\n  <div class=\"inner-addon right-addon float-right\">\n    <i class=\"fas fa-search\"></i>\n    <input type=\"text\" id=\"search\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"searchText\" />\n  </div>\n</div>\n\n<br>\n<hr>\n<table class=\"table emp-table\">\n  <thead class=\"thead emp-table\">\n    <tr>\n      <th class=\"emp-th\">First Name</th>\n      <th class=\"emp-th\">Last Name</th>\n      <th class=\"emp-th\">Gender</th>\n      <th class=\"emp-th\">Date of Birth</th>\n      <th class=\"emp-th\">Department</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngIf=\"showSpinner || noDatainDb || isException || (employees | search :searchText)?.length === 0 \">\n      <td colspan=\"5\">\n        <app-spinner *ngIf=\"showSpinner\" #spinner></app-spinner>\n        <h6  id=\"nocontent\" *ngIf=\"noDatainDb || (employees | search :searchText)?.length === 0 \"> <i class=\"fas fa-times-circle\"></i> No employee\n          information found. </h6>\n        <h6 *ngIf=\"isException\"><i class=\"fas fa-exclamation-triangle\"></i> Something went wrong!.</h6>\n      </td>\n\n    </tr>\n    <tr *ngFor=\"let employee of employees | search :searchText\">\n      <td>{{ employee.firstName }}</td>\n      <td>{{ employee.lastName }}</td>\n      <td>{{ employee.gender }} </td>\n      <td>{{ employee.dob | date: 'dd/MM/yyyy'}}</td>\n      <td>{{ employee.department }}</td>\n    </tr>\n  </tbody>\n</table>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeAddComponent } from './employee-add/employee-add.component';\nimport { EmployeeRoutingModule } from './employee.routing.module';\nimport { RouterModule } from '@angular/router';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ToastrModule } from 'ngx-toastr';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [EmployeeListComponent, EmployeeAddComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    EmployeeRoutingModule,\n    ToastrModule.forRoot({\n      timeOut: 10000,\n      preventDuplicates: true,\n    }),\n    SharedModule\n  ]\n})\nexport class EmployeeModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeAddComponent } from './employee-add/employee-add.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployeeListComponent\n  },\n  {\n    path: 'emp-list',\n    component: EmployeeListComponent\n  },\n  {\n    path: 'add-emp',\n    component: EmployeeAddComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SideBarService } from '../side-bar/side-bar.service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row flex-xl-nowrap\">\n    <div class=\"col-12 col-md-3 col-xl-2\">\n      <app-side-bar></app-side-bar>\n    </div>\n    <main class=\"col-12 col-md-9 col-xl-8 \" role=\"main\">\n      <div class=\"container-fluid\">\n        <div class=\"row flex-xl-nowrap\" >\n          <router-outlet></router-outlet>\n        </div>\n    </div>\n    </main>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { SideBarService } from './side-bar.service';\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.scss'],\n  animations: [\n    trigger('slide', [\n      state('up', style({ height: 0 })),\n      state('down', style({ height: '*' })),\n      transition('up <=> down', animate(200))\n    ])\n  ]\n})\nexport class SideBarComponent implements OnInit {\n  menus = [];\n  constructor(private sideBarService: SideBarService) {\n  }\n  ngOnInit() {\n    this.menus = this.sideBarService.getMenuList();\n  }\n\n\n}\n","<nav id=\"sidebar\" class=\"sidebar\" >\n  <div class=\"sidebar-content\">\n      <div class=\"sidebar-profile\">\n        <i class=\"fa fa-globe-americas\" aria-hidden=\"true\" ></i>\n      </div>\n\n      <div class=\"sidebar-header\">\n        <a href=\"#\">Employee Portal</a>\n      </div>\n      \n      <div class=\"sidebar-menu\">\n        <ul>\n          <li *ngFor=\"let menu of menus\" routerLinkActive=\"active\" >\n            <a  routerLink=\"{{menu.url}}\" \n            ><i class=\"{{menu.icon}}\"></i>\n              <span>{{menu.title}}</span>\n              </a>\n          </li>\n        </ul>\n      </div>\n   \n  </div>\n  </nav>\n ","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SideBarService {\n\n  menus = [];\n  constructor() {\n    this.menus = [\n      {\n        title: 'Employee List',\n        icon: 'fa fa-users',\n        url: '/emp-list',\n        active: false,\n      },\n      {\n        title: 'Emp Registration',\n        icon: 'fa fa-user-plus',\n        url: '/add-emp',\n        active: false,\n      },\n    ];\n  }\n  getMenuList() {\n    return this.menus;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n    <h6><i class=\"fas fa-cog fa-spin\"></i>  Loading employees</h6>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toaster-message',\n  templateUrl: './toaster-message.component.html',\n  styleUrls: ['./toaster-message.component.css']\n})\nexport class ToasterMessageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  toaster-message works!\n</p>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n  transform(items: any, term: string): any {\n    if (!term || !items) {\n      return items;\n    }\n    const result = this.filter(items, term);\n    return result.length > 0 ? result : [];\n  }\n\n\n   filter(items: Array<{ [key: string]: any }>, term: string): Array<{ [key: string]: any }> {\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item) => {\n      for (const property in item) {\n        if (item[property] === null || item[property] === undefined) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n}\n","\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n\nexport function routerTransition() {\n    return slideToLeft();\n}\nexport function slideToLeft() {\n    return trigger('routerTransition', [\n        transition(':enter', [\n            style({ transform: 'translateX(100%)', position: 'fixed', width: '100%' }),\n            animate('0.1s ease-in-out', style({ transform: 'translateX(0%)' }))\n        ]),\n        transition(':leave', [\n            style({ transform: 'translateX(0%)', position: 'fixed', width: '100%' }),\n            animate('0.1s ease-in-out', style({ transform: 'translateX(-100%)' }))\n        ])\n    ]);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpinnerComponent } from './component/spinner/spinner.component';\nimport { ToasterMessageComponent } from './component/toaster-message/toaster-message.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { SearchPipe } from './pipe/search.pipe';\n@NgModule({\n  declarations: [SpinnerComponent, ToasterMessageComponent, SearchPipe],\n  imports: [\n    CommonModule,\n    NgxSpinnerModule\n  ],\n  exports: [\n    SpinnerComponent,\n    ToasterMessageComponent,\n    SearchPipe\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl : '/api/employees'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}